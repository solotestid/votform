version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: votee-postgres
    environment:
      POSTGRES_DB: votee
      POSTGRES_USER: votee_user
      POSTGRES_PASSWORD: votee_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - votee-network

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: votee-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - votee-network

  # Votee Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: votee-app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://votee_user:votee_password@postgres:5432/votee
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-development-secret-key
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
      - TWILIO_ACCOUNT_SID=your_twilio_account_sid
      - TWILIO_AUTH_TOKEN=your_twilio_auth_token
      - TWILIO_PHONE_NUMBER=+1234567890
      - CLOUDFLARE_TURNSTILE_SECRET=your_turnstile_secret_key
      - CLOUDFLARE_TURNSTILE_SITE_KEY=your_turnstile_site_key
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - votee-network
    command: npm run dev

  # Prisma Studio (Database GUI)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: votee-prisma-studio
    environment:
      - DATABASE_URL=postgresql://votee_user:votee_password@postgres:5432/votee
    ports:
      - "5555:5555"
    depends_on:
      - postgres
    networks:
      - votee-network
    command: npx prisma studio --hostname 0.0.0.0 --port 5555

volumes:
  postgres_data:
  redis_data:

networks:
  votee-network:
    driver: bridge 